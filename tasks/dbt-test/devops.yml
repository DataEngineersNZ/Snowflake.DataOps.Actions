parameters:
  - name: target
    type: string
  - name: working_directory
    type: string
  - name: profiles_directory
    type: string
  - name: snowflake_target_database
    type: string
  - name: snowflake_authenticator_value
    type: string
  - name: env_name
    type: string
    default: dbt-env
  - name: archive_outputs
    type: boolean
    default: false
  - name: data_tests
    type: boolean
    default: true
  - name: unit_tests
    type: boolean
    default: true

steps:

  - bash: |
      source $DBT_ENV_NAME/bin/activate
      dbt test --select test_type:data --profiles-dir=${{ parameters.profiles_directory }} --target=${{ parameters.target }}
    displayName: Run dbt Data Tests
    condition: and(succeeded(), ${{ parameters.data_tests }})
    workingDirectory: ${{ parameters.working_directory }}
    env:
      DBT_ENV_NAME: ${{ parameters.env_name }}
      snowflake-target-database: ${{ parameters.snowflake_target_database }}
      snowflake-username: $(snowflake-username)
      snowflake-account: $(snowflake-account)
      snowflake-password: ${{ parameters.snowflake_authenticator_value }}
      snowflake-warehouse: $(snowflake-warehouse)
      snowflake-role: $(snowflake-role)
      snowflake-private-key-password: $(snowflake-private-key-password)

  - bash: |
      source $DBT_ENV_NAME/bin/activate
      dbt test --select test_type:unit --profiles-dir=${{ parameters.profiles_directory }} --target=${{ parameters.target }}
    displayName: Run dbt Unit Tests
    condition: and(succeeded(), ${{ parameters.unit_tests }})
    workingDirectory: ${{ parameters.working_directory }}
    env:
      DBT_ENV_NAME: ${{ parameters.env_name }}
      snowflake-target-database: ${{ parameters.snowflake_target_database }}
      snowflake-username: $(snowflake-username)
      snowflake-account: $(snowflake-account)
      snowflake-password: ${{ parameters.snowflake_authenticator_value }}
      snowflake-warehouse: $(snowflake-warehouse)
      snowflake-role: $(snowflake-role)
      snowflake-private-key-password: $(snowflake-private-key-password)

  - task: PublishPipelineArtifact@1
    displayName: Archive dbt test results
    condition: and(succeeded(), eq(${{ parameters.archive_outputs }}, true))
    inputs:
      targetPath: ${{ parameters.working_directory }}/target/run_results.json
      artifactName: dbt-test-results