name: Download dbt manifest
description: Downloads the dbt manifest.json file to the current working directory
inputs:
  use_azure_federated_login:
    description: Specifies if the action should use Azure Federated Login or Azure Service Principal ClientID/ClientSecret
    default: false
  target-directory:
    description: The directory where the DBT output is located
    required: true
  working-directory:
    description: The directory where dbt is located
    required: true
  resource-group:
    description: The resource group where the storage account is located
    required: true
  storage-account:
    description: The name of the storage account
    required: true
  snowflake-target-database:
    description: The name of the database to get the manifest for
    required: true

permissions:
  id-token: write
  contents: read
runs:
  using: "composite"
  steps:
      - name: Authenticate to Azure as a Service Principal
        uses: azure/login@v2
        condition: ${{ inputs.use_azure_federated_login == 'false' }}
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Authenticate to Azure as a Service Principal (ODIC)
        uses: azure/login@v2
        condition: ${{ inputs.use_azure_federated_login == 'true' }}
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Download DBT Docs
        uses: azure/CLI@v2
        with:
          inlineScript: |
              if $(az storage blob exists --container-name 'manifests' --name ${{ inputs.snowflake-target-database }}_manifest.json --account-name ${{ inputs.storage-account }} --query exists --auth-mode login)
              then
                echo " ==> DBT manifest exists in the container, downloading"
                az storage blob download --account-name ${{ inputs.storage-account }} --auth-mode login --container 'manifests' --name '${{ inputs.snowflake-target-database }}_manifest.json' --file '${{ inputs.working-directory }}/manifest.json'
              fi

      # Azure logout
      - name: logout
        shell: bash
        run: |
              az logout
        if: always()