name: Clone the Manifest for the cloned database
description: Clones an existing dbt manifest.json for the database
inputs:
  azure_credentials:
    description: The azure azure_credentials to be used 
    required: true
  resource-group:
    description: The resource group where the storage account is located
    required: true
  storage-account:
    description: The name of the storage account
    required: true
  snowflake-source-database:
    description: The name of the database to get the manifest for
    required: true
  snowflake-target-database:
    description: The name of the database to set the manifest for
    required: true

runs:
  using: "composite"
  steps:
      - name: Authenticate to Azure as a Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ inputs.azure_credentials }}           

      - name: Clone Manifest file
        uses: azure/CLI@v1
        with:
          inlineScript: |
              if $(az storage blob exists --container-name 'manifests' --name ${{ inputs.snowflake-source-database }}_manifest.json --account-name ${{ inputs.storage-account }} --query exists --auth-mode login)
              then
                echo " ==> DBT manifest exists in the container, copying file"
                az storage blob copy start \
                  --account-name ${{ inputs.storage-account }} \
                  --destination-container 'manifests' \
                  --destination-blob '${{ inputs.snowflake-target-database }}_manifest.json' \
                  --source-account-name ${{ inputs.storage-account }} \
                  --source-container 'manifests' \
                  --source-blob '${{ inputs.snowflake-source-database }}_manifest.json' \
                  --auth-mode login  
              fi
              
      # Azure logout
      - name: logout
        shell: bash
        run: |
              az logout
        if: always()