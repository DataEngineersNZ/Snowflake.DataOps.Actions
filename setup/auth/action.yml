name:  Snowflake Authentication
description: Sets up the public private key for the database
inputs:
  snowflake-authenticator:
    description: authentication type to be used
    required: true
  snowflake-authenticator-value:
    description: The authentication value
    required: true
  dbt-directory:
    description: directory where dbt project is located
    required: true
outputs:
  snowflake-authenticator-value:
    description: authenticator value
    value: ${{ steps.set_auth.outputs.result-value }}

runs:
  using: "composite"
  steps:
    - name: set_auth
      id: set_auth
      shell: pwsh
      run: |
          echo "====> listing files"
          ls
          echo "============================="
          ls ${{ inputs.dbt-directory }}
          echo "============================="
          ls snowflake-dataops
          echo "============================="
          if ('${{ inputs.snowflake-authenticator }}' -eq 'private_key_path') {
              if (Test-Path -Path ".\keys") {
              } else {
                  New-Item -Path ".\" -Name "keys" -ItemType "directory"
              }
              $PRIVATE_KEY_FILE_LOCAL_PATH = ".\keys\rsa_key.p8"
              if (Test-Path -Path $PRIVATE_KEY_FILE_LOCAL_PATH) {
              } else {
                  $file_details = [Collections.Generic.List[string]]::New()
                  $token = "${{ inputs.snowflake-authenticator-value }}"
                  $token_arr = $token.split("||")
                  $file_details.Add("-----BEGIN ENCRYPTED PRIVATE KEY-----`r")
                  foreach($line in $token_arr) {
                      if($line -ne '') {
                          $file_details.Add("$line" + "`r")
                      }
                  }
                  $file_details.Add("-----END ENCRYPTED PRIVATE KEY-----`r")
                  $file_details | Out-File  $PRIVATE_KEY_FILE_LOCAL_PATH -Encoding utf8
              }
              $PRIVATE_KEY_FILE_FULL_PATH = (Get-Item -Path $PRIVATE_KEY_FILE_LOCAL_PATH).FullName
              $PRIVATE_KEY_FILE_FULL_PATH_ONLY = (Get-Item -Path $PRIVATE_KEY_FILE_LOCAL_PATH).DirectoryName

              if (Test-Path -Path "${{ inputs.dbt-directory }}/profiles.yml") {
                  $correctProfile = Get-Content -Path "${{ inputs.dbt-directory }}/profiles.privatekey.yml"
                  Set-Content -Path "${{ inputs.dbt-directory }}/profiles.yml" -Value $correctProfile
              } else {
                $correctProfile = Get-Content -Path "${{ inputs.dbt-directory }}/profiles.privatekey.yml"
                $correctProfile | Out-File "${{ inputs.dbt-directory }}/profiles.yml" -Encoding utf8
              }

              "result-value=$PRIVATE_KEY_FILE_FULL_PATH" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
          else {
              if (Test-Path -Path "${{ inputs.dbt-directory }}/profiles.password.yml") {
                  $correctProfile = Get-Content -Path "${{ inputs.dbt-directory }}/profiles.password.yml"
                  $correctProfile | Out-File "${{ inputs.dbt-directory }}/profiles.yml" -Encoding utf8
              }
              "result-value=${{ inputs.snowflake-authenticator-value }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }